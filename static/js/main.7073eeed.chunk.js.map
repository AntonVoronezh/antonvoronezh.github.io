{"version":3,"sources":["serviceWorker.js","store/actions/login.js","store/actions/filter.js","components/pages/LoginPage/LoginPage.jsx","components/pages/MainPage/MainPage.jsx","components/elements/TopMenu/index.js","components/elements/TopMenu/TopMenu.jsx","components/elements/Spinner/index.js","components/elements/Spinner/Spinner.js","components/elements/Task/index.js","components/elements/Task/Task.js","components/elements/Pagination/index.js","components/elements/Pagination/Pagination.jsx","containers/elements/TopMenu/TopMenu.js","store/actions/menu.js","containers/elements/Pagination/Pagination.js","components/pages/FilterPage/FilterPage.jsx","helpers/constants.js","helpers/AuthServiceContext.js","helpers/filterServiceContext.js","hoc/withAuthService.js","hoc/withFilterService.js","containers/pages/LoginPage/LoginPage.js","containers/pages/LoginPage/index.js","containers/pages/MainPage/index.js","containers/pages/MainPage/MainPage.js","containers/pages/LogoutPage/LogoutPage.js","containers/pages/LogoutPage/index.js","containers/pages/FilterPage/FilterPage.js","containers/pages/FilterPage/index.js","components/App/App.jsx","store/reducers/menu.js","store/reducers/login.js","store/reducers/filter.js","store/rootReducer.js","store/store.js","services/authService.js","services/filterService.js","index.js"],"names":["Boolean","window","location","hostname","match","changeUsernameTextAC","text","type","changePasswordTextAC","fetchLoginSuccessAC","data","fetchLoginFailureAC","errorMsg","addNameAC","name","fetchFilterFailureAC","changeCount","count","dispatch","getState","changeSelectCountAC","filterTasks","value","result","tasks","filter","el","active","filteredArrAC","LoginPage","_ref","userNameText","passwordText","onUsernameChange","onPasswordChange","onLogin","isDisabled","error","react_default","a","createElement","react","className","onSubmit","placeholder","onChange","_ref2","nativeEvent","_ref3","disabled","MainPage","TopMenu","menuList","pathname","menuItems","map","id","to","content","isActivePage","key","react_router_dom","onClick","onClickHandler","uk-navbar","Spinner","uk-spinner","Task","Pagination","activePage","pagesTotal","arr","i","push","pagination","handlePageChange","menuListNotAuth","menuListAuth","TopMenuContainer","_this$props","this","props","isLoggedIn","rest","Object","objectWithoutProperties","elements_TopMenu","assign","Component","connect","menu","_ref$login","login","page","changeActivePageAC","withRouter","PaginationContainer","elements_Pagination","objectSpread","changeActivePagePagAC","changeActivePagePag","FilterPage","_ref$tasks","tasksArr","changeSelect","idx","elements_Task","event","Number","target","elements_Pagination_Pagination","statuses","INIT","SUCCESS","FAILURE","REQUEST","ERROR","React","createContext","AuthServiceProvider","Provider","AuthServiceConsumer","Consumer","FilterServiceProvider","FilterServiceConsumer","withAuthService","Wrapped","AuthService","authService","withFilterService","FilterService","filterService","LoginPageContainer","status","elements_Spinner","react_router","pages_LoginPage_LoginPage","service","bindActionCreators","asyncToGenerator","regenerator_default","mark","_callee","_getState","_getState$login","response","message","token","wrap","_context","prev","next","tryLogin","sent","user","localStorage","setItem","t0","stop","_x","_x2","apply","arguments","pages_MainPage_MainPage","LogoutPage","logout","mapDispatchToProps","removeItem","FilterPageContainer","getTasks","length","_this$props2","_this$props2$tasks","counted","pages_FilterPage_FilterPage","getFilterData","then","fetchFilterSuccessAC","catch","err","App","autoLogin","containers_elements_TopMenu_TopMenu","path","exact","render","pages_MainPage","pages_FilterPage","pages_LoginPage","pages_LogoutPage","getItem","initialState","menuRreducer","state","undefined","action","updateText","oldText","payload","slice","loginRreducer","filtered","chunk","coll","size","iter","iterColl","acc","concat","toConsumableArray","getPaginationCount","Math","ceil","filterRreducer","_state$pagination","total","rootReducer","combineReducers","myLogger","console","log","createThunkMiddleware","extraArgument","myThunk","withExtraArgument","username","password","Promise","resolve","reject","setTimeout","random","Error","filterData","FilterServises","storeService","createStore","applyMiddleware","tasksService","ReactDOM","es","store","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6SAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,kJCjBAC,EAAuB,SAAAC,GAAI,MAAK,CACrCC,KAF4B,uBAG5BD,SAIKE,EAAuB,SAAAF,GAAI,MAAK,CACrCC,KAF4B,uBAG5BD,SAWKG,EAAsB,SAAAC,GAAI,MAAK,CACpCH,KAF2B,sBAG3BG,SAIKC,EAAsB,SAAAC,GAAQ,MAAK,CACxCL,KAF2B,sBAG3BK,aAIKC,EAAY,SAAAC,GAAI,MAAK,CAC1BP,KAFgB,WAGhBO,SCtBKC,EAAuB,SAAAH,GAAQ,MAAK,CACzCL,KAF4B,uBAG5BK,aA4CKI,EAAc,SAAAC,GAAK,OAAI,SAACC,EAAUC,GACvCD,EAX2B,SAAAD,GAAK,MAAK,CACrCV,KAF2B,sBAG3BU,SASSG,CAAoBH,IAC7BC,EA1CsC,CACtCX,KAF+B,4BA4C/BW,EAP8B,CAC9BX,KAFsB,qBAsBjBc,EAAc,SAAAC,GAAK,OAAI,SAACJ,EAAUC,GAAa,IAGhDI,EAFIC,EAAUL,IAAWK,MAArBA,MAIR,OAAQF,GACP,IAAK,MACJC,EAASC,EACT,MACD,IAAK,SACJD,EAASC,EAAMC,OAAO,SAAAC,GAAE,OAAIA,EAAGC,SAC/B,MACD,IAAK,YACJJ,EAASC,EAAMC,OAAO,SAAAC,GAAE,OAAKA,EAAGC,SAChC,MACD,QACCJ,EAASC,EAGXN,EA5EsC,CACtCX,KAF+B,4BA8E/BW,EAtDqB,SAAAM,GAAK,MAAK,CAC/BjB,KAFoB,eAGpBiB,SAoDSI,CAAcL,6BC3CTM,EAjDG,SAAAC,GAA2F,IAAxFC,EAAwFD,EAAxFC,aAAcC,EAA0EF,EAA1EE,aAAcC,EAA4DH,EAA5DG,iBAAkBC,EAA0CJ,EAA1CI,iBAAkBtB,EAAwBkB,EAAxBlB,SAAUuB,EAAcL,EAAdK,QAaxFC,IAAiBL,GAAkBC,GAEnCK,EAAQzB,EAAW0B,EAAAC,EAAAC,cAAA,WAAM5B,GAAkB,KAEjD,OACC0B,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACCH,EAAAC,EAAAC,cAAA,MAAIE,UAAU,sBAAd,kCACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAkBL,GACjCC,EAAAC,EAAAC,cAAA,QAAMG,SApBkB,WACzBR,MAoBEG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACdJ,EAAAC,EAAAC,cAAA,SACCE,UAAU,gCACVnC,KAAK,OACLqC,YAAY,qCACZC,SAtBwB,SAAAC,GAA+B,IAAbpC,EAAaoC,EAA5BC,YAAerC,KAC9CuB,EAAiBvB,IAsBbY,MAAOS,KAGTO,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACdJ,EAAAC,EAAAC,cAAA,SACCE,UAAU,gCACVnC,KAAK,OACLqC,YAAY,2CACZC,SA3BwB,SAAAG,GAA+B,IAAbtC,EAAasC,EAA5BD,YAAerC,KAC9CwB,EAAiBxB,IA2BbY,MAAOU,KAITM,EAAAC,EAAAC,cAAA,UAAQE,UAAU,8BAA8BnC,KAAK,SAAS0C,SAAUb,GAAxE,yECdWc,EA5BE,WAChB,OACCZ,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACCH,EAAAC,EAAAC,cAAA,MAAIE,UAAU,sBAAd,+FADD,iEAGCJ,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAHP,+UAKCF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WALP,mYAOCF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAPP,2pBAUCF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAVP,0hBAYCF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAZP,yrBAeCF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAfP,wMAiBCF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAjBP,sCAmBCF,EAAAC,EAAAC,cAAA,WAnBD,4CAqBCF,EAAAC,EAAAC,cAAA,aCvBYW,eCIC,SAAArB,GAA4C,IAAzCe,EAAyCf,EAAzCe,SAAU3C,EAA+B4B,EAA/B5B,SAAUkD,EAAqBtB,EAArBsB,SAAUtC,EAAWgB,EAAXhB,KACxCuC,EAAanD,EAAbmD,SAMFC,EAAYF,EAASG,IAAI,SAAAT,GAAyB,IAAtBU,EAAsBV,EAAtBU,GAAIC,EAAkBX,EAAlBW,GAAIC,EAAcZ,EAAdY,QACnCC,EAAeN,IAAaI,EAAK,YAAc,KAErD,OACCnB,EAAAC,EAAAC,cAAA,MAAIoB,IAAKJ,EAAId,UAAWiB,EAAcD,QAASA,GAC9CpB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAMJ,GAAIA,EAAIK,QAAS,kBATH,SAAAT,GACtBR,EAASQ,GAQsBU,CAAeV,KAC1CK,MAML,OACCpB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBAAsBsB,YAAU,QAC9C1B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACdJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,qBAAqBY,GACnChB,EAAAC,EAAAC,cAAA,QAAME,UAAU,mBAAmB5B,OC3BxBmD,SCCC,WACd,OAAO3B,EAAAC,EAAAC,cAAA,OAAK0B,aAAW,eCFVC,SCGF,SAAArC,GAAc,IAAXhB,EAAWgB,EAAXhB,KACf,OAAOwB,EAAAC,EAAAC,cAAA,WAAM1B,KCJCsD,SCGK,SAAAtC,GAMnB,IAN6D,IAAvCe,EAAuCf,EAAvCe,SAAUwB,EAA6BvC,EAA7BuC,WAAYC,EAAiBxC,EAAjBwC,WAKtCC,EAAM,GACHC,EAAI,EAAGA,GAAKF,EAAYE,GAAK,EACrCD,EAAIE,KAAKD,GAGV,IAAME,EAAaH,EAAIhB,IAAI,SAAAiB,GAC1B,OACClC,EAAAC,EAAAC,cAAA,MAAIoB,IAAKY,EAAGV,QAAS,kBAXE,SAAAU,GACxB3B,EAAS2B,GAUmBG,CAAiBH,KAC3ClC,EAAAC,EAAAC,cAAA,QAAME,UAAW2B,IAAeG,EAAI,6BAA+B,oBAAqBA,MAK3F,OAAOlC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBAAiBgC,KChBjCE,EAAkB,CACvB,CAAEpB,GAAI,EAAGC,GAAI,IAAKC,QAAS,2DAC3B,CAAEF,GAAI,EAAGC,GAAI,UAAWC,QAAS,wCACjC,CAAEF,GAAI,EAAGC,GAAI,SAAUC,QAAS,mCAE3BmB,EAAe,CACpB,CAAErB,GAAI,EAAGC,GAAI,IAAKC,QAAS,2DAC3B,CAAEF,GAAI,EAAGC,GAAI,UAAWC,QAAS,wCACjC,CAAEF,GAAI,EAAGC,GAAI,UAAWC,QAAS,mCAG5BoB,mLACI,IAAAC,EACwBC,KAAKC,MAA7BC,EADAH,EACAG,WAAeC,EADfC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,gBAEF3B,EAAW8B,EAAaL,EAAeD,EAE7C,OAAOtC,EAAAC,EAAAC,cAAC8C,EAADF,OAAAG,OAAA,GAAaJ,EAAb,CAAmB/B,SAAUA,YALPoC,aAuBhBC,cAdS,SAAA3D,GAA2D,IAAhDuC,EAAgDvC,EAAxD4D,KAAQrB,WAAgDsB,EAAA7D,EAAlC8D,MAChD,MAAO,CACNvB,aACAa,WAHiFS,EAAzBT,WAIxDpE,KAJiF6E,EAAb7E,OAQ3C,SAAAI,GAC1B,MAAO,CACN2B,SAAU,SAAAgD,GAAI,OAAI3E,ECnCO,SAAA2E,GAAI,MAAK,CACnCtF,KAH0B,qBAI1BsF,QDiC4BC,CAAmBD,OAIjCJ,CAGbM,YAAWjB,IEtCPkB,mLAEJ,OAAO1D,EAAAC,EAAAC,cAACyD,EAAejB,KAAKC,cAFIO,aAkBnBC,cAZS,SAAA3D,GAA+B,IAAnB4C,EAAmB5C,EAA5BN,MAASkD,WACnC,OAAOU,OAAAc,EAAA,EAAAd,CAAA,GACHV,IAIsB,SAAAxD,GAC1B,MAAO,CACN2B,SAAU,SAAAgD,GAAI,OAAI3E,EbkDQ,SAAA2E,GAAI,OAAI,SAAC3E,GACpCA,EAN6B,SAAA2E,GAAI,MAAK,CACtCtF,KAF8B,yBAG9BsF,QAISM,CAAsBN,IAC/B3E,EAlB8B,CAC9BX,KAFsB,oBajCM6F,CAAoBP,OAIlCJ,CAGbO,GCmCaK,EAvDI,SAAAvE,GAAmE,IAAhElB,EAAgEkB,EAAhElB,SAAgE0F,EAAAxE,EAAtDN,MAAO+E,OAA+C,IAAAD,EAApC,GAAoCA,EAAhCjF,EAAgCS,EAAhCT,YAAamF,EAAmB1E,EAAnB0E,aAC5DnE,EAAQzB,EAAW0B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAkB9B,GAAkB,KACtEY,EAAQ+E,EAAShD,IAAI,SAAC7B,EAAI+E,GAC/B,OAAOnE,EAAAC,EAAAC,cAACkE,EAADtB,OAAAG,OAAA,CAAM3B,IAAK6C,GAAS/E,MAmB5B,OACCY,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACCH,EAAAC,EAAAC,cAAA,MAAIE,UAAU,sBAAd,iHACAJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,iCAAiCoB,QAnB5B,WACxBzC,EAAY,SAkBX,sBAGAiB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,iCAAiCoB,QAlBzB,WAC3BzC,EAAY,YAiBX,oDAGAiB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,iCAAiCoB,QAjBvB,WAC7BzC,EAAY,eAgBX,gEAGAiB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,eAAeG,SAhBb,SAAA8D,GACrBH,EAAaI,OAAOD,EAAME,OAAOvF,UAgB/BgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,KAAd,iIACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,KAAd,iIACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,KAAd,iIACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,KAAd,iIACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,KAAd,iIACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,MAAd,kIACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,MAAd,kIACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,MAAd,kIACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,MAAd,kIACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,MAAd,kIACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,MAAd,mIAGAe,EACAb,EACDc,EAAAC,EAAAC,cAACsE,EAAD,QCjDYC,EARE,CAChBC,KAAM,OACNC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,MAAO,WCHiEC,IAAMC,gBAA7DC,IAAVC,SAAyCC,IAAVC,WCAsCL,IAAMC,gBAAjEK,IAAVH,SAA2CI,IAAVF,SCc1BG,EAZS,kBAAM,SAAAC,GAC7B,OAAO,SAAA7C,GACN,OACC3C,EAAAC,EAAAC,cAACiF,EAAD,KACE,SAAAM,GACA,OAAOzF,EAAAC,EAAAC,cAACsF,EAAD1C,OAAAG,OAAA,GAAaN,EAAb,CAAoB+C,YAAaD,UCO9BE,EAZW,kBAAM,SAAAH,GAC/B,OAAO,SAAA7C,GACN,OACC3C,EAAAC,EAAAC,cAACoF,EAAD,KACE,SAAAM,GACA,OAAO5F,EAAAC,EAAAC,cAACsF,EAAD1C,OAAAG,OAAA,GAAaN,EAAb,CAAoBkD,cAAeD,UCEzCE,mLACI,IAAArD,EACgCC,KAAKC,MAArCoD,EADAtD,EACAsD,OAAQnD,EADRH,EACQG,WAAeC,EADvBC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,yBAGR,OAAIsD,IAAWtB,EAASI,QAChB7E,EAAAC,EAAAC,cAAC8F,EAAD,MAEJpD,EACI5C,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CAAU9E,GAAG,YAGdnB,EAAAC,EAAAC,cAACgG,EAAcrD,UAXSK,aCTlB3D,EDyCAgG,IACdpC,YAlBuB,SAAA3D,GAAe,IAAZ8D,EAAY9D,EAAZ8D,MAC1B,OAAOR,OAAAc,EAAA,EAAAd,CAAA,GACHQ,IAIuB,SAAC1E,EAAD4B,GAA+B,IrBKxC2F,EqBLsBT,EAAkBlF,EAAlBkF,YACxC,OAAOU,YACN,CACCzG,iBAAkB5B,EAClB6B,iBAAkB1B,EAClB2B,SrBAgBsG,EqBAIT,ErBAO,iCAAAlG,EAAAsD,OAAAuD,EAAA,EAAAvD,CAAAwD,EAAArG,EAAAsG,KAAM,SAAAC,EAAO5H,EAAUC,GAAjB,IAAA4H,EAAAC,EAAAjH,EAAAC,EAAAiH,EAAAZ,EAAAa,EAAAC,EAAArI,EAAA,OAAA8H,EAAArG,EAAA6G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAR,EAG/B5H,IAH+B6H,EAAAD,EAElCnD,MAAS7D,EAFyBiH,EAEzBjH,aAAcC,EAFWgH,EAEXhH,aAGxBd,EA3BkC,CAClCX,KAF2B,wBAuBQ8I,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAQXd,EAAQe,SAASzH,EAAcC,GARpB,OAQ5BiH,EAR4BI,EAAAI,KAUjCpB,EAIGY,EAJHZ,OACAa,EAGGD,EAHHC,QACAC,EAEGF,EAFHE,MACQrI,EACLmI,EADHS,KAAQ5I,KAGM,OAAXuH,GACHsB,aAAaC,QAAQ,QAAST,GAC9BQ,aAAaC,QAAQ,OAAQ9I,GAC7BI,EAAST,KACTS,EAASL,EAAUC,KACE,QAAXuH,GACVnH,EAASP,EAAoBuI,IAtBIG,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAyBlCnI,EAASP,EAAoB0I,EAAAQ,GAAIX,UAzBC,yBAAAG,EAAAS,SAAAhB,EAAA,kBAAN,gBAAAiB,EAAAC,GAAA,OAAAlI,EAAAmI,MAAAjF,KAAAkF,YAAA,MqBE5BhJ,IAKDuE,CAGE2C,IE7CYlF,ECEW,WACzB,OAAOZ,EAAAC,EAAAC,cAAC2H,EAAD,OCCFC,+LAEJpF,KAAKC,MAAMoF,0CAGX,OAAO/H,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CAAU9E,GAAG,aALG+B,aASnB8E,GAAqB,CAC1BD,OzBkEc,kBAAM,SAAAnJ,GACpByI,aAAaY,WAAW,SACxBZ,aAAaY,WAAW,QACxBrJ,EAPuB,CACvBX,KAFc,c0B3EA6J,GDiBA3E,YACd,KACA6E,GAFc7E,CAGb2E,IEXII,+LACe,IAAAzF,EAIfC,KAAKC,MAFCzD,EAFSuD,EAElBvD,MAASA,MACTiJ,EAHkB1F,EAGlB0F,SAGoB,IAAjBjJ,EAAMkJ,QACTD,qCAIO,IAAAE,EAMJ3F,KAAKC,MAND2F,EAAAD,EAEPnJ,MAAS6G,EAFFuC,EAEEvC,OAAQwC,EAFVD,EAEUC,QAASjK,EAFnBgK,EAEmBhK,SAC1BS,EAHOsJ,EAGPtJ,YACAL,EAJO2J,EAIP3J,YACAkE,EALOyF,EAKPzF,WAGD,OAAImD,IAAWtB,EAASI,QAChB7E,EAAAC,EAAAC,cAAC8F,EAAD,MAGJpD,EAEF5C,EAAAC,EAAAC,cAACsI,EAAD,CAAYtJ,MAAOqJ,EAASjK,SAAUA,EAAUS,YAAaA,EAAamF,aAAcxF,IAInFsB,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CAAU9E,GAAG,kBA9BY+B,aCTnBa,GD6DA4B,IACdxC,YAnBuB,SAAA3D,GACvB,MAAO,CACNoD,WAF4DpD,EAAnC8D,MAASV,WAGlC1D,MAH4DM,EAAZN,QAOvB,SAACN,EAAD4B,GAAiC,I1B9BzC2F,E0B8BqBN,EAAoBrF,EAApBqF,cACvC,OAAOO,YACN,CACC+B,U1BjCgBhC,E0BiCKN,E1BjCM,kBAAM,SAAAjH,GACnCA,EAtBmC,CACnCX,KAF4B,yBAwB5BkI,EACEsC,gBACAC,KAAK,SAAAtK,GAAQ,IACL2H,EAA2B3H,EAA3B2H,OAAQ7G,EAAmBd,EAAnBc,MAAO0H,EAAYxI,EAAZwI,QAER,OAAXb,GACHnH,EAxByB,SAAAM,GAAK,MAAK,CACtCjB,KAF4B,uBAG5BiB,SAsBYyJ,CAAqBzJ,IAC9BN,EAbmC,CACtCX,KAF+B,6BAeP,QAAX8H,GACVnH,EAASH,EAAqBmI,MAI/BgC,MAAM,SAAAC,GAAG,OAAIjK,EAASH,EAAqBoK,EAAIjC,e0BmB/C7H,cACAL,eAEDE,IAKDuE,CAGE+E,KE3DGY,+LAEJpG,KAAKC,MAAMoG,6CAIX,OACC/I,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACCH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mCACdJ,EAAAC,EAAAC,cAAA,cACCF,EAAAC,EAAAC,cAAC8I,EAAD,OAEDhJ,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,KACCjG,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CAAOgD,KAAK,IAAIC,OAAK,EAACC,OAAQ,kBAAMnJ,EAAAC,EAAAC,cAACkJ,EAAD,SACpCpJ,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CAAOgD,KAAK,UAAUC,OAAK,EAACC,OAAQ,kBAAMnJ,EAAAC,EAAAC,cAACmJ,GAAD,SAC1CrJ,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CAAOgD,KAAK,SAASC,OAAK,EAACC,OAAQ,kBAAMnJ,EAAAC,EAAAC,cAACoJ,EAAD,SACzCtJ,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CAAOgD,KAAK,UAAUC,OAAK,EAACC,OAAQ,kBAAMnJ,EAAAC,EAAAC,cAACqJ,GAAD,SAC1CvJ,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CAAOkD,OAAQ,kBAAMnJ,EAAAC,EAAAC,cAAA,0CAlBVgD,aA2BZ8E,GAAqB,CAC1Be,U7BgCiB,kBAAM,SAAAnK,GAEvB,GADcyI,aAAamC,QAAQ,SACxB,CACV,IAAMhL,EAAO6I,aAAamC,QAAQ,QAClC5K,EAASL,EAAUC,IACnBI,EAAST,S6BlCIgF,eACd,KACA6E,GAFc7E,CAGb2F,ICxCIW,GAAe,CACpB1H,WAAY,KAiBE2H,GAdM,WAAkC,IAAjCC,EAAiC/B,UAAAQ,OAAA,QAAAwB,IAAAhC,UAAA,GAAAA,UAAA,GAAzB6B,GAAcI,EAAWjC,UAAAQ,OAAA,EAAAR,UAAA,QAAAgC,EAC9C3L,EAAe4L,EAAf5L,KAAMsF,EAASsG,EAATtG,KACd,OAAQtF,GACP,IjBTyB,qBiBUxB,OAAO6E,OAAAc,EAAA,EAAAd,CAAA,GACH6G,EADJ,CAEC5H,WAAYwB,IAGd,QACC,OAAOoG,ICZJF,GAAe,CACpBhK,aAAc,GACdC,aAAc,GACdqG,OAAQtB,EAASC,KACjB9B,YAAY,EACZtE,SAAU,KACVE,KAAM,MAGDsL,GAAa,SAACC,EAASC,GAC5B,OAAgB,OAAZA,EACID,EAAQE,MAAM,EAAGF,EAAQ3B,OAAS,GAEnC2B,EAAUC,GAkEHE,GA/DO,WAAkC,IAAjCP,EAAiC/B,UAAAQ,OAAA,QAAAwB,IAAAhC,UAAA,GAAAA,UAAA,GAAzB6B,GAAcI,EAAWjC,UAAAQ,OAAA,EAAAR,UAAA,QAAAgC,EAC/C3L,EAA+B4L,EAA/B5L,KAAMD,EAAyB6L,EAAzB7L,KAAMM,EAAmBuL,EAAnBvL,SAAUE,EAASqL,EAATrL,KACtBiB,EAA+BkK,EAA/BlK,aAAcC,EAAiBiK,EAAjBjK,aAEtB,OAAQzB,GACP,I/BzB2B,uB+B0B1B,OAAO6E,OAAAc,EAAA,EAAAd,CAAA,GACH6G,EADJ,CAEClK,aAAcqK,GAAWrK,EAAczB,KAGzC,I/BzB2B,uB+B0B1B,OAAO8E,OAAAc,EAAA,EAAAd,CAAA,GACH6G,EADJ,CAECjK,aAAcoK,GAAWpK,EAAc1B,KAGzC,I/BvB0B,sB+BwBzB,OAAO8E,OAAAc,EAAA,EAAAd,CAAA,GACH6G,EADJ,CAEC5D,OAAQtB,EAASI,QACjBvG,SAAU,OAGZ,I/BzB0B,sB+B0BzB,OAAOwE,OAAAc,EAAA,EAAAd,CAAA,GACH6G,EADJ,CAEC5D,OAAQtB,EAASE,QACjBlF,aAAc,GACdC,aAAc,GACdkD,YAAY,EACZtE,SAAU,OAGZ,I/B7B0B,sB+B8BzB,OAAOwE,OAAAc,EAAA,EAAAd,CAAA,GACH6G,EADJ,CAEC5D,OAAQtB,EAASG,QACjBtG,WACAmB,aAAc,GACdC,aAAc,KAGhB,I/Bca,S+BbZ,OAAOoD,OAAAc,EAAA,EAAAd,CAAA,GACH6G,EADJ,CAEC5D,OAAQtB,EAASC,KACjB9B,YAAY,EACZpE,KAAM,OAGR,I/BxCe,W+ByCd,OAAOsE,OAAAc,EAAA,EAAAd,CAAA,GACH6G,EADJ,CAECnL,SAIF,QACC,OAAOmL,aClEJF,GAAe,CACpBvK,MAAO,GACPiL,SAAU,GACV5B,QAAS,GACTxC,OAAQtB,EAASC,KACjBpG,SAAU,KACV8D,WAAY,CACXzD,MAAO,EACPoD,WAAY,EACZC,WAAY,OAKRoI,GAAQ,SAACC,EAAMC,GAQpB,OAPa,SAAPC,EAAQC,GAAuB,IAAbC,EAAa7C,UAAAQ,OAAA,QAAAwB,IAAAhC,UAAA,GAAAA,UAAA,GAAP,GAC7B,OAAwB,IAApB4C,EAASpC,OACLqC,EAEDF,EAAKC,EAASP,MAAMK,GAAhB,GAAAI,OAAA5H,OAAA6H,GAAA,EAAA7H,CAA2B2H,GAA3B,CAAgCD,EAASP,MAAM,EAAGK,MAGvDC,CAAKF,IAGPO,GAAqB,SAACxC,EAAQzJ,GACnC,OAAIyJ,EAASzJ,EACL,EAGDkM,KAAKC,KAAK1C,EAASzJ,IAqFZoM,GAlFQ,WAAkC,IAAjCpB,EAAiC/B,UAAAQ,OAAA,QAAAwB,IAAAhC,UAAA,GAAAA,UAAA,GAAzB6B,GAAcI,EAAWjC,UAAAQ,OAAA,EAAAR,UAAA,QAAAgC,EAChD3L,EAAuC4L,EAAvC5L,KAAMiB,EAAiC2K,EAAjC3K,MAAOZ,EAA0BuL,EAA1BvL,SAAUK,EAAgBkL,EAAhBlL,MAAO4E,EAASsG,EAATtG,KADkByH,EAIpDrB,EADHvH,WAAcL,EAHyCiJ,EAGzCjJ,WAAmBkJ,EAHsBD,EAG7BrM,MAG3B,OAAQV,GACP,I/BrD2B,uB+BsD1B,OAAO6E,OAAAc,EAAA,EAAAd,CAAA,GACH6G,EADJ,CAEC5D,OAAQtB,EAASI,QACjBvG,SAAU,OAGZ,I/BvD2B,uB+BwD1B,OAAOwE,OAAAc,EAAA,EAAAd,CAAA,GACH6G,EADJ,CAEC5D,OAAQtB,EAASE,QACjBzF,QACAiL,SAAUjL,EACVqJ,QAAS6B,GAAMlL,EAAO+L,GAAOlJ,EAAa,GAC1CzD,SAAU,OAGZ,I/B3D2B,uB+B4D1B,OAAOwE,OAAAc,EAAA,EAAAd,CAAA,GACH6G,EADJ,CAEC5D,OAAQtB,EAASG,QACjBtG,aAGF,I/BrCmB,e+BsClB,OAAOwE,OAAAc,EAAA,EAAAd,CAAA,GACH6G,EADJ,CAECQ,SAAUjL,EACVqJ,QAAS6B,GAAMlL,EAAO+L,GAAOlJ,EAAa,GAC1CK,WAAWU,OAAAc,EAAA,EAAAd,CAAA,GACP6G,EAAMvH,WADA,CAETL,WAAY,MAKf,I/B1C0B,sB+B2CzB,OAAOe,OAAAc,EAAA,EAAAd,CAAA,GACH6G,EADJ,CAECvH,WAAWU,OAAAc,EAAA,EAAAd,CAAA,GACP6G,EAAMvH,WADA,CAETzD,YAIH,I/BjF8B,0B+BkF7B,OAAOmE,OAAAc,EAAA,EAAAd,CAAA,GACH6G,EADJ,CAECvH,WAAWU,OAAAc,EAAA,EAAAd,CAAA,GACP6G,EAAMvH,WADA,CAETJ,WAAY4I,GAAmBjB,EAAMQ,SAAS/B,OAAQ6C,GACtDlJ,WAAY,MAIf,I/BvDqB,iB+BwDpB,OAAOe,OAAAc,EAAA,EAAAd,CAAA,GACH6G,EADJ,CAECpB,QAAS6B,GAAMT,EAAMQ,SAAUc,GAAOlJ,EAAa,KAGrD,I/BlD6B,yB+BmD5B,OAAOe,OAAAc,EAAA,EAAAd,CAAA,GACH6G,EADJ,CAECvH,WAAWU,OAAAc,EAAA,EAAAd,CAAA,GACP6G,EAAMvH,WADA,CAETL,WAAYwB,MAIf,QACC,OAAOoG,IClHKuB,GANKC,YAAgB,CACnC/H,KAAMsG,GACNpG,MAAO4G,GACPhL,MAAO6L,KCHFK,GAAW,SAAA5L,GAAA,IAAGX,EAAHW,EAAGX,SAAH,OAAkB,SAAAD,GAAQ,OAAI,SAAAiL,GAI9C,OAHAwB,QAAQC,IAAIzB,EAAO5L,MACnBoN,QAAQC,IAAIzM,KAELD,EAASiL,MAGjB,SAAS0B,GAAsBC,GAC9B,OAAO,SAAAhL,GAAA,IAAG5B,EAAH4B,EAAG5B,SAAUC,EAAb2B,EAAa3B,SAAb,OAA4B,SAAAoI,GAAI,OAAI,SAAA4C,GAC1C,MAAsB,oBAAXA,EACHA,EAAOjL,EAAUC,EAAU2M,GAE5BvE,EAAK4C,MAId,IAAM4B,GAAUF,KAChBE,GAAQC,kBAAoBH,GAEb,ICvBM9F,oGACXkG,EAAUC,GAkBlB,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC5BC,WAAW,WACNnB,KAAKoB,SAAW,GACnBF,EAAO,IAAIG,MAAM,kBAEjBJ,EArBe,OAAbH,GAAkC,OAAbC,EACjB,CACN7F,OAAQ,KACRc,MAAO,6BACPO,KAAM,CACL5I,KAAM,YAID,CACNuH,OAAQ,MACRa,QAAS,6BAYR,iBC1BAuF,GAAa,CAClB,CAAE3N,KAAM,SAAUa,QAAQ,GAC1B,CAAEb,KAAM,SAAUa,QAAQ,GAC1B,CAAEb,KAAM,SAAUa,QAAQ,GAC1B,CAAEb,KAAM,SAAUa,QAAQ,GAC1B,CAAEb,KAAM,SAAUa,QAAQ,GAC1B,CAAEb,KAAM,SAAUa,QAAQ,GAC1B,CAAEb,KAAM,SAAUa,QAAQ,GAC1B,CAAEb,KAAM,SAAUa,QAAQ,GAC1B,CAAEb,KAAM,SAAUa,QAAQ,GAC1B,CAAEb,KAAM,UAAWa,QAAQ,GAC3B,CAAEb,KAAM,UAAWa,QAAQ,GAC3B,CAAEb,KAAM,UAAWa,QAAQ,GAC3B,CAAEb,KAAM,UAAWa,QAAQ,GAC3B,CAAEb,KAAM,UAAWa,QAAQ,GAC3B,CAAEb,KAAM,UAAWa,QAAQ,GAC3B,CAAEb,KAAM,UAAWa,QAAQ,GAC3B,CAAEb,KAAM,UAAWa,QAAQ,GAC3B,CAAEb,KAAM,UAAWa,QAAQ,GAC3B,CAAEb,KAAM,UAAWa,QAAQ,GAC3B,CAAEb,KAAM,UAAWa,QAAQ,GAC3B,CAAEb,KAAM,UAAWa,QAAQ,GAC3B,CAAEb,KAAM,UAAWa,QAAQ,GAC3B,CAAEb,KAAM,UAAWa,QAAQ,GAC3B,CAAEb,KAAM,UAAWa,QAAQ,GAC3B,CAAEb,KAAM,UAAWa,QAAQ,IAGP+M,2GAgBnB,OAAO,IAAIP,QAAQ,SAACC,EAASC,GAC5BC,WAAW,WACNnB,KAAKoB,SAAW,GACnBF,EAAO,IAAIG,MAAM,kBAEjBJ,EAlBEjB,KAAKoB,SAAW,GACZ,CACNlG,OAAQ,KACR7G,MAAOiN,IAGD,CACNpG,OAAQ,MACRa,QAAS,wGAYR,iBCvCAyF,GHWeC,YAAYpB,GAAaqB,YAAgBd,GAASL,KGVjE1F,GAAc,IAAID,GAClB+G,GAAe,IAAI5G,GAEzB6G,IAAStD,OACRnJ,EAAAC,EAAAC,cAACwM,EAAA,EAAD,CAAUC,MAAON,IAChBrM,EAAAC,EAAAC,cAACqB,EAAA,EAAD,KACCvB,EAAAC,EAAAC,cAAC+E,EAAD,CAAqBjG,MAAO0G,IAC3B1F,EAAAC,EAAAC,cAACmF,EAAD,CAAuBrG,MAAOwN,IAC7BxM,EAAAC,EAAAC,cAAC0M,GAAD,UAMJC,SAASC,eAAe,StCsGnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvE,KAAK,SAAAwE,GACjCA,EAAaC","file":"static/js/main.7073eeed.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const CHANGE_USERNAME_TEXT = 'CHANGE_USERNAME_TEXT';\r\nconst changeUsernameTextAC = text => ({\r\n\ttype: CHANGE_USERNAME_TEXT,\r\n\ttext,\r\n});\r\n\r\nconst CHANGE_PASSWORD_TEXT = 'CHANGE_PASSWORD_TEXT';\r\nconst changePasswordTextAC = text => ({\r\n\ttype: CHANGE_PASSWORD_TEXT,\r\n\ttext,\r\n});\r\n\r\nexport { changeUsernameTextAC, CHANGE_USERNAME_TEXT, changePasswordTextAC, CHANGE_PASSWORD_TEXT };\r\n\r\nconst FETCH_LOGIN_REQUEST = 'FETCH_LOGIN_REQUEST';\r\nconst fetchLoginRequestAC = () => ({\r\n\ttype: FETCH_LOGIN_REQUEST,\r\n});\r\n\r\nconst FETCH_LOGIN_SUCCESS = 'FETCH_LOGIN_SUCCESS';\r\nconst fetchLoginSuccessAC = data => ({\r\n\ttype: FETCH_LOGIN_SUCCESS,\r\n\tdata,\r\n});\r\n\r\nconst FETCH_LOGIN_FAILURE = 'FETCH_LOGIN_FAILURE';\r\nconst fetchLoginFailureAC = errorMsg => ({\r\n\ttype: FETCH_LOGIN_FAILURE,\r\n\terrorMsg,\r\n});\r\n\r\nconst ADD_NAME = 'ADD_NAME';\r\nconst addNameAC = name => ({\r\n\ttype: ADD_NAME,\r\n\tname,\r\n});\r\n\r\nconst fetchLogin = service => () => async (dispatch, getState) => {\r\n\tconst {\r\n\t\tlogin: { userNameText, passwordText },\r\n\t} = getState();\r\n\r\n\tdispatch(fetchLoginRequestAC());\r\n\r\n\ttry {\r\n\t\tconst response = await service.tryLogin(userNameText, passwordText);\r\n\t\tconst {\r\n\t\t\tstatus,\r\n\t\t\tmessage,\r\n\t\t\ttoken,\r\n\t\t\tuser: { name },\r\n\t\t} = response;\r\n\r\n\t\tif (status === 'ok') {\r\n\t\t\tlocalStorage.setItem('token', token);\r\n\t\t\tlocalStorage.setItem('name', name);\r\n\t\t\tdispatch(fetchLoginSuccessAC());\r\n\t\t\tdispatch(addNameAC(name));\r\n\t\t} else if (status === 'err') {\r\n\t\t\tdispatch(fetchLoginFailureAC(message));\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tdispatch(fetchLoginFailureAC(err.message));\r\n\t}\r\n};\r\n\r\nexport { FETCH_LOGIN_REQUEST, FETCH_LOGIN_SUCCESS, FETCH_LOGIN_FAILURE, fetchLogin, ADD_NAME };\r\n\r\nconst autoLogin = () => dispatch => {\r\n\tconst token = localStorage.getItem('token');\r\n\tif (token) {\r\n\t\tconst name = localStorage.getItem('name');\r\n\t\tdispatch(addNameAC(name));\r\n\t\tdispatch(fetchLoginSuccessAC());\r\n\t}\r\n};\r\n\r\nconst LOGOUT = 'LOGOUT';\r\nconst logoutAC = () => ({\r\n\ttype: LOGOUT,\r\n});\r\n\r\nconst logout = () => dispatch => {\r\n\tlocalStorage.removeItem('token');\r\n\tlocalStorage.removeItem('name');\r\n\tdispatch(logoutAC());\r\n};\r\n\r\nexport { autoLogin, LOGOUT, logout };\r\n","const FETCH_FILTER_REQUEST = 'FETCH_FILTER_REQUEST';\r\nconst fetchFilterRequestAC = () => ({\r\n\ttype: FETCH_FILTER_REQUEST,\r\n});\r\n\r\nconst FETCH_FILTER_SUCCESS = 'FETCH_FILTER_SUCCESS';\r\nconst fetchFilterSuccessAC = tasks => ({\r\n\ttype: FETCH_FILTER_SUCCESS,\r\n\ttasks,\r\n});\r\n\r\nconst FETCH_FILTER_FAILURE = 'FETCH_FILTER_FAILURE';\r\nconst fetchFilterFailureAC = errorMsg => ({\r\n\ttype: FETCH_FILTER_FAILURE,\r\n\terrorMsg,\r\n});\r\n\r\nconst CHANGE_PAGINATION_COUNT = 'CHANGE_PAGINATION_COUNT';\r\nconst changePaginationCountAC = () => ({\r\n\ttype: CHANGE_PAGINATION_COUNT,\r\n});\r\n\r\nconst fetchTasks = service => () => dispatch => {\r\n\tdispatch(fetchFilterRequestAC());\r\n\tservice\r\n\t\t.getFilterData()\r\n\t\t.then(data => {\r\n\t\t\tconst { status, tasks, message } = data;\r\n\r\n\t\t\tif (status === 'ok') {\r\n\t\t\t\tdispatch(fetchFilterSuccessAC(tasks));\r\n\t\t\t\tdispatch(changePaginationCountAC());\r\n\t\t\t} else if (status === 'err') {\r\n\t\t\t\tdispatch(fetchFilterFailureAC(message));\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\t.catch(err => dispatch(fetchFilterFailureAC(err.message)));\r\n};\r\n\r\nconst FILTERED_ARR = 'FILTERED_ARR';\r\nconst filteredArrAC = tasks => ({\r\n\ttype: FILTERED_ARR,\r\n\ttasks,\r\n});\r\n\r\n\r\nconst CHANGE_SELECT_COUNT = 'CHANGE_SELECT_COUNT';\r\nconst changeSelectCountAC = count => ({\r\n\ttype: CHANGE_SELECT_COUNT,\r\n\tcount,\r\n});\r\n\r\nconst CHANGE_COUNTED = 'CHANGE_COUNTED';\r\nconst changeCountedAC = () => ({\r\n\ttype: CHANGE_COUNTED,\r\n});\r\n\r\nconst changeCount = count => (dispatch, getState) => {\r\n\tdispatch(changeSelectCountAC(count));\r\n\tdispatch(changePaginationCountAC());\r\n\tdispatch(changeCountedAC());\r\n};\r\n\r\nconst CHANGE_ACTIVE_PAGE_PAG = 'CHANGE_ACTIVE_PAGE_PAG';\r\nconst changeActivePagePagAC = page => ({\r\n\ttype: CHANGE_ACTIVE_PAGE_PAG,\r\n\tpage,\r\n});\r\n\r\nconst changeActivePagePag = page => (dispatch) => {\r\n\tdispatch(changeActivePagePagAC(page));\r\n\tdispatch(changeCountedAC());\r\n};\r\n\r\nconst filterTasks = value => (dispatch, getState) => {\r\n\tconst { tasks } = getState().tasks;\r\n\r\n\tlet result;\r\n\r\n\tswitch (value) {\r\n\t\tcase 'All':\r\n\t\t\tresult = tasks;\r\n\t\t\tbreak;\r\n\t\tcase 'Active':\r\n\t\t\tresult = tasks.filter(el => el.active);\r\n\t\t\tbreak;\r\n\t\tcase 'NonActive':\r\n\t\t\tresult = tasks.filter(el => !el.active);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tresult = tasks;\r\n\t}\r\n\r\n\tdispatch(changePaginationCountAC())\r\n\tdispatch(filteredArrAC(result));\r\n};\r\n\r\nexport {\r\n\tfetchTasks,\r\n\tFETCH_FILTER_REQUEST,\r\n\tFETCH_FILTER_SUCCESS,\r\n\tFETCH_FILTER_FAILURE,\r\n\tfilterTasks,\r\n\tFILTERED_ARR,\r\n\tCHANGE_SELECT_COUNT,\r\n\tchangeSelectCountAC,\r\n\tCHANGE_COUNTED,\r\n\tchangeCount,\r\n\tCHANGE_PAGINATION_COUNT,\r\n\tCHANGE_ACTIVE_PAGE_PAG,\r\n\tchangeActivePagePag,\r\n};\r\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst LoginPage = ({ userNameText, passwordText, onUsernameChange, onPasswordChange, errorMsg, onLogin }) => {\n\tconst submitFormHandler = () => {\n\t\tonLogin();\n\t};\n\n\tconst usernameInputHandler = ({ nativeEvent: { data } }) => {\n\t\tonUsernameChange(data);\n\t};\n\n\tconst passwordInputHandler = ({ nativeEvent: { data } }) => {\n\t\tonPasswordChange(data);\n\t};\n\n\tconst isDisabled = !(!!userNameText && !!passwordText);\n\n\tconst error = errorMsg ? <div>{errorMsg}</div> : null;\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<h1 className=\"uk-heading-divider\">Логин</h1>\n\t\t\t<div className=\"uk-text-danger\">{error}</div>\n\t\t\t<form onSubmit={submitFormHandler}>\n\t\t\t\t<div className=\"uk-margin\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"uk-input uk-form-width-medium\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Логин: aa\"\n\t\t\t\t\t\tonChange={usernameInputHandler}\n\t\t\t\t\t\tvalue={userNameText}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"uk-margin\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"uk-input uk-form-width-medium\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Пароль: 11\"\n\t\t\t\t\t\tonChange={passwordInputHandler}\n\t\t\t\t\t\tvalue={passwordText}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<button className=\"uk-button uk-button-primary\" type=\"submit\" disabled={isDisabled}>\n\t\t\t\t\tПопробовать\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</Fragment>\n\t);\n};\n\nexport default LoginPage;\n\nLoginPage.propTypes = {\n\tuserNameText: PropTypes.string.isRequired,\n\tpasswordText: PropTypes.string.isRequired,\n\terrorMsg: PropTypes.string,\n\tonUsernameChange: PropTypes.func.isRequired,\n\tonPasswordChange: PropTypes.func.isRequired,\n};\n","import React, { Fragment } from 'react';\n\nconst MainPage = () => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<h1 className=\"uk-heading-divider\">Главная страница</h1>\n\t\t\tДобрый день!\n\t\t\t<br /><br/>\n\t\t\tПо вашей просьбе при дизайне применялись элементы библиотеки UIkit.\n\t\t\t<br /><br/>\n\t\t\tВ основу проекта заложена архитектура, применяемая в команде где я сейчас.\n\t\t\t<br /><br/>\n\t\t\tИзбыточность (на первый взгляд) папок и файлов перебивается возможностью масштабирования проекта и\n\t\t\tпереиспользования файлов.\n\t\t\t<br /><br/>\n\t\t\tВ мок-файлах предопределен процент ошибок (и ошибок сервера, и ошибок связи) для реализации их обработки.\n\t\t\t<br /><br/>\n\t\t\tФункциональность редьюсера фильтрации увеличена для показания чанкования. По факту это всё должно делаться\n\t\t\tна сервере (ну вы знаете :)\n\t\t\t<br /><br/>\n\t\t\tВся бизнес-логика реализована через Redux.\n\t\t\t<br /><br/>\n\t\t\tлогин - aa\n\t\t\t<br />\n\t\t\tпароль - 11\n\t\t\t<br />\n\t\t</Fragment>\n\t);\n};\n\nexport default MainPage;\n","import TopMenu from './TopMenu';\r\n\r\nexport default TopMenu;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TopMenu.css';\r\n\r\nconst TopMenu = ({ onChange, location, menuList, name }) => {\r\n\tconst { pathname } = location;\r\n\r\n\tconst onClickHandler = pathname => {\r\n\t\tonChange(pathname);\r\n\t};\r\n\r\n\tconst menuItems = menuList.map(({ id, to, content }) => {\r\n\t\tconst isActivePage = pathname === to ? 'uk-active' : null;\r\n\r\n\t\treturn (\r\n\t\t\t<li key={id} className={isActivePage} content={content}>\r\n\t\t\t\t<Link to={to} onClick={() => onClickHandler(pathname)}>\r\n\t\t\t\t\t{content}\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<nav className=\"uk-navbar-container\" uk-navbar=\"true\">\r\n\t\t\t<div className=\"uk-navbar-left\">\r\n\t\t\t\t<ul className=\"uk-navbar-nav aaa\">{menuItems}</ul>\r\n\t\t\t\t<span className=\"uk-text-primary\">{name}</span>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default TopMenu;\r\n\r\nTopMenu.propTypes = {\r\n\tonChange: PropTypes.func.isRequired,\r\n\tmenuList: PropTypes.array.isRequired,\r\n};\r\n","import Spinner from './Spinner';\n\nexport default Spinner;\n","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n  return <div uk-spinner=\"ratio: 3\"></div>;\n};\n\nexport default Spinner;\n","import Task from './Task';\n\nexport default Task;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Task.css';\n\nconst Task = ({ name }) => {\n\treturn <div>{name}</div>;\n};\n\nexport default Task;\n\nTask.propTypes = {\n\tname: PropTypes.string.isRequired,\n};\n","import Pagination from './Pagination';\n\nexport default Pagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Pagination.css';\n\nconst PaginationE = ({ onChange, activePage, pagesTotal }) => {\n\tconst handlePageChange = i => {\n\t\tonChange(i);\n\t};\n\n\tconst arr = [];\n\tfor (let i = 1; i <= pagesTotal; i += 1) {\n\t\tarr.push(i);\n\t}\n\n\tconst pagination = arr.map(i => {\n\t\treturn (\n\t\t\t<li key={i} onClick={() => handlePageChange(i)}>\n\t\t\t\t<span className={activePage === i ? 'uk-background-primary href' : 'uk-disabled href'}>{i}</span>\n\t\t\t</li>\n\t\t);\n\t});\n\n\treturn <ul className=\"uk-pagination\">{pagination}</ul>;\n};\n\nexport default PaginationE;\n\nPaginationE.propTypes = {\n\tactivePage: PropTypes.number.isRequired,\n\tonChange: PropTypes.func.isRequired,\n};\n\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { TopMenu } from '../../../components/elements';\r\nimport { changeActivePageAC } from '../../../store/actions';\r\n\r\nconst menuListNotAuth = [\r\n\t{ id: 1, to: '/', content: 'На главную' },\r\n\t{ id: 2, to: '/filter', content: 'Фильтр' },\r\n\t{ id: 3, to: '/login', content: 'Логин' },\r\n];\r\nconst menuListAuth = [\r\n\t{ id: 1, to: '/', content: 'На главную' },\r\n\t{ id: 2, to: '/filter', content: 'Фильтр' },\r\n\t{ id: 3, to: '/logout', content: 'Выход' },\r\n];\r\n\r\nclass TopMenuContainer extends Component {\r\n\trender() {\r\n\t\tconst { isLoggedIn, ...rest } = this.props;\r\n\t\tconst menuList = isLoggedIn ? menuListAuth : menuListNotAuth;\r\n\r\n\t\treturn <TopMenu {...rest} menuList={menuList} />;\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ menu: { activePage }, login: { isLoggedIn, name } }) => {\r\n\treturn {\r\n\t\tactivePage,\r\n\t\tisLoggedIn,\r\n\t\tname\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonChange: page => dispatch(changeActivePageAC(page)),\r\n\t};\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(withRouter(TopMenuContainer));\r\n\r\n","const CHANGE_ACTIVE_PAGE = 'CHANGE_ACTIVE_PAGE';\r\n\r\nconst changeActivePageAC = page => ({\r\n\ttype: CHANGE_ACTIVE_PAGE,\r\n\tpage,\r\n});\r\n\r\nexport { changeActivePageAC, CHANGE_ACTIVE_PAGE };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Pagination } from '../../../components/elements';\r\nimport { changeActivePagePag } from '../../../store/actions';\r\n\r\nclass PaginationContainer extends Component {\r\n\trender() {\r\n\t\treturn <Pagination {...this.props} />;\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ tasks: { pagination } }) => {\r\n\treturn {\r\n\t\t...pagination,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonChange: page => dispatch(changeActivePagePag(page)),\r\n\t};\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(PaginationContainer);\r\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './FilterPage.css';\nimport { Task } from '../../elements';\nimport { Pagination } from '../../../containers/elements';\n\nconst FilterPage = ({ errorMsg, tasks: tasksArr = [], filterTasks, changeSelect }) => {\n\tconst error = errorMsg ? <div className=\"uk-text-danger\">{errorMsg}</div> : null;\n\tconst tasks = tasksArr.map((el, idx) => {\n\t\treturn <Task key={idx} {...el} />;\n\t});\n\n\tconst allButtonHandler = () => {\n\t\tfilterTasks('All');\n\t};\n\n\tconst activeButtonHandler = () => {\n\t\tfilterTasks('Active');\n\t};\n\n\tconst inactiveButtonHandler = () => {\n\t\tfilterTasks('NonActive');\n\t};\n\n\tconst selectHandler = event => {\n\t\tchangeSelect(Number(event.target.value));\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<h1 className=\"uk-heading-divider\">Страница фильтрации</h1>\n\t\t\t<button className=\"uk-button uk-button-primary mr\" onClick={allButtonHandler}>\n\t\t\t\tВсе\n\t\t\t</button>\n\t\t\t<button className=\"uk-button uk-button-primary mr\" onClick={activeButtonHandler}>\n\t\t\t\tАктивные\n\t\t\t</button>\n\t\t\t<button className=\"uk-button uk-button-primary mr\" onClick={inactiveButtonHandler}>\n\t\t\t\tНеактивные\n\t\t\t</button>\n\t\t\t<select className=\"uk-select mr\" onChange={selectHandler}>\n\t\t\t\t<option value=\"5\">Выводить по 5 на странице</option>\n\t\t\t\t<option value=\"6\">Выводить по 6 на странице</option>\n\t\t\t\t<option value=\"7\">Выводить по 7 на странице</option>\n\t\t\t\t<option value=\"8\">Выводить по 8 на странице</option>\n\t\t\t\t<option value=\"9\">Выводить по 9 на странице</option>\n\t\t\t\t<option value=\"10\">Выводить по 10 на странице</option>\n\t\t\t\t<option value=\"11\">Выводить по 11 на странице</option>\n\t\t\t\t<option value=\"12\">Выводить по 12 на странице</option>\n\t\t\t\t<option value=\"13\">Выводить по 13 на странице</option>\n\t\t\t\t<option value=\"14\">Выводить по 14 на странице</option>\n\t\t\t\t<option value=\"15\">Выводить по 15 на странице</option>\n\t\t\t</select>\n\n\t\t\t{error}\n\t\t\t{tasks}\n\t\t\t<Pagination />\n\t\t</Fragment>\n\t);\n};\n\nexport default FilterPage;\n\nFilterPage.propTypes = {\n\terrorMsg: PropTypes.string,\n\ttasks: PropTypes.array,\n\tchangeSelect: PropTypes.func.isRequired,\n};\n","const statuses = {\r\n\tINIT: 'INIT',\r\n\tSUCCESS: 'SUCCESS',\r\n\tFAILURE: 'FAILURE',\r\n\tREQUEST: 'REQUEST',\r\n\tERROR: 'ERROR',\r\n};\r\n\r\nexport default statuses;\r\n","import React from 'react';\r\n\r\nconst { Provider: AuthServiceProvider, Consumer: AuthServiceConsumer } = React.createContext();\r\n\r\nexport { AuthServiceProvider, AuthServiceConsumer };\r\n","import React from 'react';\r\n\r\nconst { Provider: FilterServiceProvider, Consumer: FilterServiceConsumer } = React.createContext();\r\n\r\nexport { FilterServiceProvider, FilterServiceConsumer };\r\n","import React from 'react';\r\n\r\nimport { AuthServiceConsumer } from '../helpers';\r\n\r\nconst withAuthService = () => Wrapped => {\r\n\treturn props => {\r\n\t\treturn (\r\n\t\t\t<AuthServiceConsumer>\r\n\t\t\t\t{AuthService => {\r\n\t\t\t\t\treturn <Wrapped {...props} authService={AuthService} />;\r\n\t\t\t\t}}\r\n\t\t\t</AuthServiceConsumer>\r\n\t\t);\r\n\t};\r\n};\r\n\r\nexport default withAuthService;\r\n","import React from 'react';\r\n\r\nimport { FilterServiceConsumer } from '../helpers';\r\n\r\nconst withFilterService = () => Wrapped => {\r\n\treturn props => {\r\n\t\treturn (\r\n\t\t\t<FilterServiceConsumer>\r\n\t\t\t\t{FilterService => {\r\n\t\t\t\t\treturn <Wrapped {...props} filterService={FilterService} />;\r\n\t\t\t\t}}\r\n\t\t\t</FilterServiceConsumer>\r\n\t\t);\r\n\t};\r\n};\r\n\r\nexport default withFilterService;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { LoginPage } from '../../../components/pages';\r\nimport { changeUsernameTextAC, changePasswordTextAC, fetchLogin } from '../../../store/actions';\r\nimport { Spinner } from '../../../components/elements';\r\nimport { withAuthService } from '../../../hoc';\r\nimport { statuses } from '../../../helpers';\r\n\r\nclass LoginPageContainer extends Component {\r\n\trender() {\r\n\t\tconst { status, isLoggedIn, ...rest } = this.props;\r\n\r\n\t\tif (status === statuses.REQUEST) {\r\n\t\t\treturn <Spinner />;\r\n\t\t}\r\n\t\tif (isLoggedIn) {\r\n\t\t\treturn <Redirect to=\"/filter\" />;\r\n\t\t}\r\n\r\n\t\treturn <LoginPage {...rest} />;\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ login }) => {\r\n\treturn {\r\n\t\t...login,\r\n\t};\r\n};\r\n\r\n\tconst mapDispatchToProps = (dispatch, { authService }) => {\r\n\treturn bindActionCreators(\r\n\t\t{\r\n\t\t\tonUsernameChange: changeUsernameTextAC,\r\n\t\t\tonPasswordChange: changePasswordTextAC,\r\n\t\t\tonLogin: fetchLogin(authService),\r\n\t\t},\r\n\t\tdispatch\r\n\t);\r\n};\r\n\r\nexport default withAuthService()(\r\n\tconnect(\r\n\t\tmapStateToProps,\r\n\t\tmapDispatchToProps\r\n\t)(LoginPageContainer)\r\n);\r\n\r\n","import LoginPage from './LoginPage';\r\n\r\nexport default LoginPage;\r\n","import MainPage from './MainPage';\r\n\r\nexport default MainPage;\r\n","import React from 'react';\n\nimport { MainPage } from '../../../components/pages';\n\nconst MainPageContainer = () => {\n\treturn <MainPage />;\n};\n\nexport default MainPageContainer;\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { logout } from '../../../store/actions';\r\n\r\nclass LogoutPage extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.logout();\r\n\t}\r\n\trender() {\r\n\t\treturn <Redirect to=\"/\" />;\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tlogout,\r\n};\r\n\r\nexport default connect(\r\n\tnull,\r\n\tmapDispatchToProps\r\n)(LogoutPage);\r\n","import LogoutPage from './LogoutPage';\r\n\r\nexport default LogoutPage;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { FilterPage } from '../../../components/pages';\r\nimport { fetchTasks, filterTasks, changeCount } from '../../../store/actions';\r\nimport { withFilterService } from '../../../hoc';\r\nimport { statuses } from '../../../helpers';\r\nimport { Spinner } from '../../../components/elements';\r\n\r\nclass FilterPageContainer extends Component {\r\n\tcomponentDidMount() {\r\n\t\tconst {\r\n\t\t\ttasks: { tasks },\r\n\t\t\tgetTasks,\r\n\t\t} = this.props;\r\n\r\n\t\tif (tasks.length === 0) {\r\n\t\t\tgetTasks();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\ttasks: { status, counted, errorMsg },\r\n\t\t\tfilterTasks,\r\n\t\t\tchangeCount,\r\n\t\t\tisLoggedIn,\r\n\t\t} = this.props;\r\n\r\n\t\tif (status === statuses.REQUEST) {\r\n\t\t\treturn <Spinner />;\r\n\t\t}\r\n\r\n\t\tif (isLoggedIn) {\r\n\t\t\treturn (\r\n\t\t\t\t<FilterPage tasks={counted} errorMsg={errorMsg} filterTasks={filterTasks} changeSelect={changeCount} />\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn <Redirect to=\"/login\" />;\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ login: { isLoggedIn }, tasks }) => {\r\n\treturn {\r\n\t\tisLoggedIn,\r\n\t\ttasks,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { filterService }) => {\r\n\treturn bindActionCreators(\r\n\t\t{\r\n\t\t\tgetTasks: fetchTasks(filterService),\r\n\t\t\tfilterTasks,\r\n\t\t\tchangeCount,\r\n\t\t},\r\n\t\tdispatch\r\n\t);\r\n};\r\n\r\nexport default withFilterService()(\r\n\tconnect(\r\n\t\tmapStateToProps,\r\n\t\tmapDispatchToProps\r\n\t)(FilterPageContainer)\r\n);\r\n","import FilterPage from './FilterPage';\r\n\r\nexport default FilterPage;\r\n","import React, { Component, Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { autoLogin } from '../../store/actions';\nimport { LoginPage, MainPage, FilterPage, LogoutPage } from '../../containers/pages';\nimport { TopMenu } from '../../containers/elements';\n\nclass App extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.autoLogin();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className=\"uk-container uk-container-small\">\n\t\t\t\t\t<header>\n\t\t\t\t\t\t<TopMenu />\n\t\t\t\t\t</header>\n\t\t\t\t\t<main>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path=\"/\" exact render={() => <MainPage />} />\n\t\t\t\t\t\t\t<Route path=\"/filter\" exact render={() => <FilterPage />} />\n\t\t\t\t\t\t\t<Route path=\"/login\" exact render={() => <LoginPage />} />\n\t\t\t\t\t\t\t<Route path=\"/logout\" exact render={() => <LogoutPage />} />\n\t\t\t\t\t\t\t<Route render={() => <h2>Page not found</h2>} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</main>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = {\n\tautoLogin,\n};\n\nexport default connect(\n\tnull,\n\tmapDispatchToProps\n)(App);\n\n","import { CHANGE_ACTIVE_PAGE } from '../actions';\r\n\r\nconst initialState = {\r\n\tactivePage: '/',\r\n};\r\n\r\nconst menuRreducer = (state = initialState, action) => {\r\n\tconst { type, page } = action;\r\n\tswitch (type) {\r\n\t\tcase CHANGE_ACTIVE_PAGE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tactivePage: page,\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default menuRreducer;\r\n","import { CHANGE_USERNAME_TEXT, CHANGE_PASSWORD_TEXT } from '../actions';\r\nimport { statuses } from '../../helpers';\r\nimport { FETCH_LOGIN_REQUEST, FETCH_LOGIN_SUCCESS, FETCH_LOGIN_FAILURE, LOGOUT, ADD_NAME } from '../actions';\r\n\r\nconst initialState = {\r\n\tuserNameText: '',\r\n\tpasswordText: '',\r\n\tstatus: statuses.INIT,\r\n\tisLoggedIn: false,\r\n\terrorMsg: null,\r\n\tname: null,\r\n};\r\n\r\nconst updateText = (oldText, payload) => {\r\n\tif (payload === null) {\r\n\t\treturn oldText.slice(0, oldText.length - 1);\r\n\t}\r\n\treturn oldText + payload;\r\n};\r\n\r\nconst loginRreducer = (state = initialState, action) => {\r\n\tconst { type, text, errorMsg, name } = action;\r\n\tconst { userNameText, passwordText } = state;\r\n\r\n\tswitch (type) {\r\n\t\tcase CHANGE_USERNAME_TEXT: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserNameText: updateText(userNameText, text),\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase CHANGE_PASSWORD_TEXT: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpasswordText: updateText(passwordText, text),\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase FETCH_LOGIN_REQUEST: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: statuses.REQUEST,\r\n\t\t\t\terrorMsg: null,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase FETCH_LOGIN_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: statuses.SUCCESS,\r\n\t\t\t\tuserNameText: '',\r\n\t\t\t\tpasswordText: '',\r\n\t\t\t\tisLoggedIn: true,\r\n\t\t\t\terrorMsg: null,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase FETCH_LOGIN_FAILURE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: statuses.FAILURE,\r\n\t\t\t\terrorMsg,\r\n\t\t\t\tuserNameText: '',\r\n\t\t\t\tpasswordText: '',\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase LOGOUT: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: statuses.INIT,\r\n\t\t\t\tisLoggedIn: false,\r\n\t\t\t\tname: null\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ADD_NAME: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tname,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default loginRreducer;\r\n","import {\r\n\tFETCH_FILTER_REQUEST,\r\n\tFETCH_FILTER_SUCCESS,\r\n\tFETCH_FILTER_FAILURE,\r\n\tFILTERED_ARR,\r\n\tCHANGE_SELECT_COUNT,\r\n\tCHANGE_COUNTED,\r\n\tCHANGE_PAGINATION_COUNT,\r\n\tCHANGE_ACTIVE_PAGE_PAG,\r\n} from '../actions';\r\n\r\nimport { statuses } from '../../helpers';\r\n\r\nconst initialState = {\r\n\ttasks: [],\r\n\tfiltered: [],\r\n\tcounted: [],\r\n\tstatus: statuses.INIT,\r\n\terrorMsg: null,\r\n\tpagination: {\r\n\t\tcount: 5,\r\n\t\tactivePage: 1,\r\n\t\tpagesTotal: null,\r\n\t\t// arrLength: null\r\n\t},\r\n};\r\n\r\nconst chunk = (coll, size) => {\r\n\tconst iter = (iterColl, acc = []) => {\r\n\t\tif (iterColl.length === 0) {\r\n\t\t\treturn acc;\r\n\t\t}\r\n\t\treturn iter(iterColl.slice(size), [...acc, iterColl.slice(0, size)]);\r\n\t};\r\n\r\n\treturn iter(coll);\r\n};\r\n\r\nconst getPaginationCount = (length, count) => {\r\n\tif (length < count) {\r\n\t\treturn 1;\r\n\t}\r\n\r\n\treturn Math.ceil(length / count);\r\n};\r\n\r\nconst filterRreducer = (state = initialState, action) => {\r\n\tconst { type, tasks, errorMsg, count, page } = action;\r\n\tconst {\r\n\t\tpagination: { activePage, count: total },\r\n\t} = state;\r\n\r\n\tswitch (type) {\r\n\t\tcase FETCH_FILTER_REQUEST: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: statuses.REQUEST,\r\n\t\t\t\terrorMsg: null,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase FETCH_FILTER_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: statuses.SUCCESS,\r\n\t\t\t\ttasks,\r\n\t\t\t\tfiltered: tasks,\r\n\t\t\t\tcounted: chunk(tasks, total)[activePage - 1],\r\n\t\t\t\terrorMsg: null,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase FETCH_FILTER_FAILURE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: statuses.FAILURE,\r\n\t\t\t\terrorMsg,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase FILTERED_ARR: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfiltered: tasks,\r\n\t\t\t\tcounted: chunk(tasks, total)[activePage - 1],\r\n\t\t\t\tpagination: {\r\n\t\t\t\t\t...state.pagination,\r\n\t\t\t\t\tactivePage: 1,\r\n\t\t\t\t\t// pagesTotal: getPaginationCount(state.filtered.length, total),\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase CHANGE_SELECT_COUNT: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpagination: {\r\n\t\t\t\t\t...state.pagination,\r\n\t\t\t\t\tcount,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase CHANGE_PAGINATION_COUNT: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpagination: {\r\n\t\t\t\t\t...state.pagination,\r\n\t\t\t\t\tpagesTotal: getPaginationCount(state.filtered.length, total),\r\n\t\t\t\t\tactivePage: 1,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase CHANGE_COUNTED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcounted: chunk(state.filtered, total)[activePage - 1],\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase CHANGE_ACTIVE_PAGE_PAG: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpagination: {\r\n\t\t\t\t\t...state.pagination,\r\n\t\t\t\t\tactivePage: page,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default filterRreducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { menuRreducer, loginRreducer, filterRreducer } from './reducers';\r\n\r\nconst rootReducer = combineReducers({\r\n\tmenu: menuRreducer,\r\n\tlogin: loginRreducer,\r\n\ttasks: filterRreducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\nconst myLogger = ({ getState }) => dispatch => action => {\r\n\tconsole.log(action.type);\r\n\tconsole.log(getState());\r\n\r\n\treturn dispatch(action);\r\n};\r\n\r\nfunction createThunkMiddleware(extraArgument) {\r\n\treturn ({ dispatch, getState }) => next => action => {\r\n\t\tif (typeof action === 'function') {\r\n\t\t\treturn action(dispatch, getState, extraArgument);\r\n\t\t}\r\n\t\treturn next(action);\r\n\t};\r\n}\r\n\r\nconst myThunk = createThunkMiddleware();\r\nmyThunk.withExtraArgument = createThunkMiddleware;\r\n\r\nexport default () => createStore(rootReducer, applyMiddleware(myThunk, myLogger));\r\n","export default class AuthService {\n\ttryLogin(username, password) {\n\t\tconst data = () => {\n\t\t\tif (username === 'aa' && password === '11') {\n\t\t\t\treturn {\n\t\t\t\t\tstatus: 'ok',\n\t\t\t\t\ttoken: 'fbdfbsdfdfAsd9995-CVXVBXV9',\n\t\t\t\t\tuser: {\n\t\t\t\t\t\tname: 'MITLabs',\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tstatus: 'err',\n\t\t\t\t\tmessage: 'wrong_email_or_password',\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (Math.random() > 0.8) {\n\t\t\t\t\treject(new Error('Network Error'));\n\t\t\t\t} else {\n\t\t\t\t\tresolve(data());\n\t\t\t\t}\n\t\t\t}, 1200);\n\t\t});\n\t}\n}\n","const filterData = [\r\n\t{ name: 'Name 1', active: true },\r\n\t{ name: 'Name 2', active: false },\r\n\t{ name: 'Name 3', active: true },\r\n\t{ name: 'Name 4', active: true },\r\n\t{ name: 'Name 5', active: false },\r\n\t{ name: 'Name 6', active: false },\r\n\t{ name: 'Name 7', active: true },\r\n\t{ name: 'Name 8', active: true },\r\n\t{ name: 'Name 9', active: true },\r\n\t{ name: 'Name 10', active: false },\r\n\t{ name: 'Name 11', active: true },\r\n\t{ name: 'Name 12', active: true },\r\n\t{ name: 'Name 13', active: true },\r\n\t{ name: 'Name 14', active: true },\r\n\t{ name: 'Name 15', active: false },\r\n\t{ name: 'Name 16', active: true },\r\n\t{ name: 'Name 17', active: true },\r\n\t{ name: 'Name 18', active: false },\r\n\t{ name: 'Name 19', active: true },\r\n\t{ name: 'Name 20', active: true },\r\n\t{ name: 'Name 21', active: false },\r\n\t{ name: 'Name 22', active: true },\r\n\t{ name: 'Name 23', active: false },\r\n\t{ name: 'Name 24', active: true },\r\n\t{ name: 'Name 25', active: false },\r\n];\r\n\r\nexport default class FilterServises {\r\n\tgetFilterData() {\r\n\t\tconst data = () => {\r\n\t\t\tif (Math.random() < 0.8) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tstatus: 'ok',\r\n\t\t\t\t\ttasks: filterData,\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tstatus: 'err',\r\n\t\t\t\t\tmessage: 'данные не получены',\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (Math.random() > 0.8) {\r\n\t\t\t\t\treject(new Error('Network Error'));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresolve(data());\r\n\t\t\t\t}\r\n\t\t\t}, 1200);\r\n\t\t});\r\n\t}\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport { App } from './components/App';\nimport store from './store/store';\nimport { AuthServiceProvider, FilterServiceProvider } from './helpers';\nimport { AuthService, FilterService } from './services';\n\nconst storeService = store();\nconst authService = new AuthService();\nconst tasksService = new FilterService();\n\nReactDOM.render(\n\t<Provider store={storeService}>\n\t\t<BrowserRouter>\n\t\t\t<AuthServiceProvider value={authService}>\n\t\t\t\t<FilterServiceProvider value={tasksService}>\n\t\t\t\t\t<App />\n\t\t\t\t</FilterServiceProvider>\n\t\t\t</AuthServiceProvider>\n\t\t</BrowserRouter>\n\t</Provider>,\n\n\tdocument.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}